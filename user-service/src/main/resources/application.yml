server:
  port: 8110

spring:
  application:
    name: user-service
  datasource:
    url: jdbc:postgresql://localhost:5432/user_service
    username: postgres
    password: admin
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  liquibase:
    change-log: classpath:db/changelog/changelog-master.xml
  kafka:
    bootstrap-servers: localhost:29092
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_OAUTH_CLIENT_ID}
            client-secret: ${GOOGLE_OAUTH_CLIENT_SECRET}
            scope:
              - openid
              - email
              - profile
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
          github:
            client-id: ${GITHUB_OAUTH_CLIENT_ID}
            client-secret: ${GITHUB_OAUTH_CLIENT_SECRET}
            scope:
              - read:user
              - user:email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
          github:
            authorization-uri: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:
    preferIpAddress: true
#    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

jwt:
  expirationMs: ${JWT_EXPIRATION}
  refreshExpirationMs: ${JWT_REFRESH_EXPIRATION}
  keys:
    path: ${KEYS_PATH}

production: ${PRODUCTION}

verification:
  token:
    expirationMs: ${VERIFICATION_TOKEN_EXPIRATION_MS}
