server:
  port: 8110

spring:
  application:
    name: user-service
  datasource:
    url: jdbc:postgresql://localhost:5432/user_service
    username: postgres
    password: admin
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  liquibase:
    change-log: classpath:db/changelog/changelog-master.xml
  kafka:
    bootstrap-servers: localhost:29092
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_OAUTH_CLIENT_ID}
            client-secret: ${GOOGLE_OAUTH_CLIENT_SECRET}
            scope:
              - openid
              - email
              - profile
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
          github:
            client-id: ${GITHUB_OAUTH_CLIENT_ID}
            client-secret: ${GITHUB_OAUTH_CLIENT_SECRET}
            scope:
              - read:user
              - user:email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
          facebook:
            client-id: ${FACEBOOK_OAUTH_CLIENT_ID}
            client-secret: ${FACEBOOK_OAUTH_CLIENT_SECRET}
            scope:
              - email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
          discord:
            client-id: ${DISCORD_OAUTH_CLIENT_ID}
            client-secret: ${DISCORD_OAUTH_CLIENT_SECRET}
            clientAuthenticationMethod: client_secret_post
            authorizationGrantType: authorization_code
            scope:
              - identify
              - email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
          github:
            authorization-uri: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user
          facebook:
            authorization-uri: https://www.facebook.com/v9.0/dialog/oauth
            token-uri: https://graph.facebook.com/v9.0/oauth/access_token
            user-info-uri: https://graph.facebook.com/me?fields=id,name,email
          discord:
            authorization-uri: https://discord.com/api/oauth2/authorize
            token-uri: https://discord.com/api/oauth2/token
            user-info-uri: https://discord.com/api/users/@me
            user-name-attribute: username

  mail:
    host: localhost
    port: 1025
    username: hello
    password: hello

    properties:
      mail:
        smtp:
          ssl:
            trust: "*"
          auth: true
          starttls:
            enable: true
          connectiontimeout: 5000
          timeout: 3000
          writetimeout: 5000

management:
  endpoints:
    web:
      exposure:
        include:
          - prometheus
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:
    preferIpAddress: true
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

config:
  production: ${PRODUCTION}
  jwt:
    expirationMs: ${JWT_EXPIRATION}
    refreshExpirationMs: ${JWT_REFRESH_EXPIRATION}
    keys-path: ${KEYS_PATH}
  client-url: ${CLIENT_URL}
  confirmation:
    token:
      expirationMs: ${CONFIRMATION_TOKEN_EXPIRATION_MS}