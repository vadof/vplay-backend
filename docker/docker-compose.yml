version: '3.9'

services:

  postgres:
    container_name: ${POSTGRES_CONTAINER_NAME}
    image: postgres:16rc1
    networks:
      - vcasino
    environment:
      - APP_ENV=${APP_ENV}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    expose:
      - '${POSTGRES_PORT}'
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    command:
      - -p ${POSTGRES_PORT}
    volumes:
      - ${POSTGRES_VOLUME}:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -p ${POSTGRES_PORT}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  eureka-server:
    container_name: ${EUREKA_CONTAINER_NAME}
    build: ../eureka-server/.
    networks:
      - vcasino
    ports:
      - '${EUREKA_PORT}:${EUREKA_PORT}'
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://eureka-server:${EUREKA_PORT}/actuator/health | grep UP || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  user-service:
    container_name: ${USER_SERVICE_CONTAINER_NAME}
    build: ../user-service/.
    networks:
      - vcasino
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://${EUREKA_INSTANCE_HOSTNAME}:${EUREKA_PORT}/eureka
    depends_on:
      postgres:
        condition: service_healthy
      eureka-server:
        condition: service_healthy

  api-gateway:
    container_name: ${API_GATEWAY_CONTAINER_NAME}
    build: ../api-gateway/.
    networks:
      - vcasino
    ports:
      - '${API_GATEWAY_PORT}:${API_GATEWAY_PORT}'
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://${EUREKA_INSTANCE_HOSTNAME}:${EUREKA_PORT}/eureka
    depends_on:
      eureka-server:
        condition: service_healthy

networks:
  vcasino:
    driver: bridge

volumes:
  prod:
    driver: local
  test:
    driver: local
